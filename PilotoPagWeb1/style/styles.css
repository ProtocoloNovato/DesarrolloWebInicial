@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@300;400;600;700&display=swap');

:root{ /*"custom propiety", con la pseudo-clase root(para poder acceder a las custom propiety desde cualquier elemento)*/
    --padding-container: 100px 0; /*100 hacia arriba y 0 a los costados*/
    --color-tittle: #001A49; 

} 

body{
    font-family: 'IBM Plex Sans', sans-serif;
}

.container{ /*modificamos el elemento container*/
    width: 90%; /*no use el 100% de la pag*/
    max-width: 1200px; /*ancho max*/
    margin: 0 auto; /*que el width se centre verticamente, con un margin auto a los lados*/
    overflow: hidden; /*todo lo q salga de ese elemento se esconda*/
    padding: var(--padding-container)/*para usar las custom propiety hay q usar la func VAR y dentro la nombre de la custom*/

}

.hero{
    width: 100%; /*100% de la pag*/ 
    height: 100vh; /*Viewport Height: del 100% del alto de la pantalla*/
    min-height: 600%; /*alto minim*/
    max-height: 800%; /*config para tablets*/
    position: relative; /*para q un elemento se posicione absolutamente a este contenedor*/
    display: grid; /*porq quiero crear 2 filas*/
    grid-template-rows: 100px 1fr;/*primera fila sea de 100px y la segunda (unidad relativa: fr) con lo sobrante*/
    color:#fff;
}

.hero::before{ /*pseudoelemento a partir de la clase hero*/
    content: "";
    position: absolute; /*para q se posicione absolutamente a su padre, q es hero*/
    top:0;
    left:0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(180deg, #0000008c 0%, #0000008c 100%), url(../images/disenioInterior.jpg); /*180grados,degradado y un top 0%,  el otro color igual (capa de transparencia)*/
    background-size: cover; /*para q se adapte a la pagina*/
    clip-path: polygon(0 0, 100% 0, 100% 80%, 50% 95%, 0 80%);/*clippy css: visualizacion del recortamamiento de imagen */
    z-index: -1; /*para correglar el texto sobre la imagen*/
}   

/*   N A V   */
.nav{
    --padding-container:0; 
    height:100%;
    display: flex;/*para poner los elementos 1 al lado del otro*/
    align-items: center;/*para  centrarlos verticalmente*/
}

.nav__title{
    font-weight: 300;/*peso de fuente delgado*/
}

.nav__link{
    margin-left: auto;   
    padding: 0;
    display: grid;
    grid-auto-flow: column; /*para q el flujo sea en columnas*/
    grid-auto-columns: max-content;/*cada una mida lo max contenido*/
    gap: 2em;/*espaciado*/
}

.nav__items{
    list-style: none;
}


.nav__menu{
    margin-left: auto;
    text-decoration: none;
    cursor: pointer; /*para q cada vez q pase el mouse, se active el display*/

}

.nav__img{
    display: block;
    width: 30px;
}

.nav__links{
    color:#fff;
}

/*   H E R O    C O N T A I N E R   */

.hero__container{ /*contenedor de la seccion*/
    max-width: 800px; /*ancho max*/
    --padding-container:0;
    display: grid; /*fragmentos en vertical*/
    grid-auto-rows: max-content; /*asi no ocupa mayor espacio del q deberia*/
    align-content: center; /*se alinee verticalmente*/
    gap: 1em;
    padding-bottom: 100px;/*para q no se pegue al recorte*/
    text-align: center;/*texto centrado*/
}

.hero__title{
    font-size: 3rem; /*16px - 1rem*/
}

/*
* 1rem sería igual a 16px en cualquier parte del documento.
* em son un múltiplo del tamaño de fuente del elemento.
*/

.hero__paragraph{
    margin-bottom: 20px; /*margen mayor entre el boton y el texto*/
}

.cta{
    display: inline-block;
    background-color:#2091f9;
    justify-self: center;
    color:#fff;
    text-decoration: none;
    padding: 13px 30px; /*13px arriba y abajo - 20px hacia los lados*/
    border-radius: 32px; /*bordeado de 30px*/
}

/*   A B O U T    */

.about{
    text-align: center;/*centrado horizontal*/
}

.subtitle{
    color: var(--color-tittle);
    font-size: 2rem; /*tamanio fuente*/
    margin-bottom:25px;/*espaciado*/
}

.about__paragraph{
    line-height: 1.7; /*espacio entre parrafos*/
}

.about__main{ /*para q se coloquen uno al lado del otro*/
    padding-top: 80px; /*mayor espacio con el parrafo de arriba*/
    display:grid;
    width: 90%;
    margin:0 auto; /*para centrar el contenedor*/
    gap: 1em;
    overflow: hidden; /*para esconoder lo q sobra*/
    grid-template-columns: repeat(auto-fit, minmax(260px, auto)); /*columnas binamicas: q me repita tantas columns como me sea necesario. con un min de 260 y max auto(para q cree columnas automaticamente).Sin usar media Querry, solo CSS grid*/
}

.about__icons{
    display: grid; 
    gap: 1em; /*espaciado*/
    justify-items: center; /*conjunto de iconos centrados*/
    width: 260px; /*tamanio del conjunto de iconos*/
    overflow: hidden; /*para q todo lo q salga de ese elemento se oculte*/
    margin:0 auto; /*centrar todo*/
}

.about__icon{
    width:40px; /*tamanio de icono*/
}

/*   K N O W L E D G E    */

.knowledge{
    background-color: #e5e5f7; /*utilizacion de background con patron (magicpattern)*/
    background-image:  radial-gradient(#444cf7 0.5px, transparent 0.5px), radial-gradient(#444cf7 0.5px, #e5e5f7 0.5px);
    background-size: 20px 20px;
    background-position: 0 0,10px 10px;
    overflow: hidden;
}

.knowledge__container{
    display: grid;
    grid-template-columns: 1fr 1fr; /*para q se reparta el espacio equitativamente*/
    gap: 1em;
    align-items: center;/*centrado verticalmente*/
}

.knowledge__picture{
    max-width: 500px; /*limitara la imagen*/
}

.knowledge__paragraph{
    line-height: 1.7;
    margin-bottom: 15px;
}

.knowledge__img{
    width: 100%;    /*ocupe el 100% del padre*/
    display: block;
}

/**/